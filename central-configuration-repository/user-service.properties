server.port=${SERVER_PORT:8082}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=none
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:liquibaseUserService/db.changelog_master.yml
spring.liquibase.default-schema=${POSTGRES_SCHEMA:users}
eureka.client.serviceUrl.defaultZone=http://${EUREKA_SERVER_HOST:localhost}:${EUREKA_SERVER_PORT:8761}/eureka
eureka.instance.preferIpAddress=true
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH2_RESOURCESERVER_URL:http://localhost:8180}/auth/realms/${OAUTH2_RESOURCESERVER_REALM:recruitment-system}/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.issuers.public-uri=${OAUTH2_ISSUER_PUBLIC_URL:http://localhost:8180}/auth/realms/${OAUTH2_RESOURCESERVER_REALM:recruitment-system}
spring.security.oauth2.resourceserver.issuers.internal-uri=${OAUTH2_ISSUER_INTERNAL_URL:http://localhost:8180}/auth/realms/${OAUTH2_RESOURCESERVER_REALM:recruitment-system}
keycloak.auth-server-url=${KEYCLOAK_URL:http://localhost:8180}/auth
keycloak.credentials.secret=${KEYCLOAK_ADMIN_SECRET:rlotIG9f8NNYcZVulQ3Uh3Xqh8anxlyh}
spring.cloud.openfeign.oauth2.registrationClientId=keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.keycloak.token-uri=${OAUTH2_CLIENT_URL:http://localhost:8180}/auth/realms/${OAUTH2_CLIENT_REALM:recruitment-system}/protocol/openid-connect/token
sfeign.oauth2.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

