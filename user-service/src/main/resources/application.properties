spring.application.name=user-service
spring.config.import=optional:configserver:http://${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8888}
spring.profiles.active=dev
spring.servlet.multipart.enabled=true
upload.path=uploads
spring.servlet.multipart.max-file-size=5MB
server.forward-headers-strategy=framework
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
#batching
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
#kafka produser
spring.kafka.bootstrap-servers=localhost:9092,kafka:39092,kafka:29092
spring.kafka.producer.client-id=user_service
spring.kafka.producer.retries=2
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#kafka consumer
spring.kafka.consumer.enable=true
spring.kafka.consumer.group-id=update_user_group
spring.kafka.consumer.client-id=testing_service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.max-poll-records=1
spring.kafka.consumer.fetch-max-wait=36000
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.concurrency=1
spring.kafka.consumer.properties.fetch.max.wait.ms=60000
spring.kafka.consumer.properties.request.timeout.ms=70000
spring.kafka.consumer.properties.fetch.min.bytes=999999999
spring.kafka.listener.poll-timeout=1800000
spring.cloud.config.retry.max-attempts=3
return.transaction.delete=jsonTransaction
#logging
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=ERROR
logging.level.net.guides=DEBUG
logging.level.org.apache.kafka=ERROR